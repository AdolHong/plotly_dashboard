{
  "query": {
    "code": "SELECT *, '${region}' as region, '${a}' as a FROM sales",
    "executor_type": "MySQL",
    "data_frame_name": "df",
    "update_mode": "手动更新"
  },
  "parameters": [
    {
      "name": "region",
      "type": "single_select",
      "choices": [
        "华东",
        "华南",
        "华北",
        "西北",
        "西南"
      ],
      "default": "华东"
    },
    {
      "name": "categories",
      "type": "multi_select",
      "choices": [
        "电子产品",
        "服装",
        "食品",
        "家居",
        "图书"
      ],
      "default": [
        "电子产品"
      ],
      "sep": ",",
      "wrapper": "'"
    },
    {
      "name": "order_date",
      "type": "date_picker",
      "format": "yyyy-MM-dd",
      "default": "${yyyy-MM-dd}"
    },
    {
      "name": "min_price",
      "type": "single_input",
      "default": "100"
    },
    {
      "name": "product_ids",
      "type": "multi_input",
      "sep": ",",
      "wrapper": "'"
    }
  ],
  "visualization": [
    {
      "type": "python",
      "title": "数据表格1",
      "options": [
        {
          "name": "region",
          "infer": "column",
          "infer_column": "region",
          "type": "str",
          "multiple": true
        }
      ],
      "description": "显示查询结果的原始数据表格1",
      "code": "# 返回表格\nif region: df = df.query(f\"region in {region}\")\nresult = df"
    },
    {
      "type": "python",
      "title": "区域销量柱状图2",
      "options": [
        {
          "name": "region",
          "infer": "column",
          "infer_column": "region",
          "type": "str"
        }
      ],
      "description": "按区域统计销量并以柱状图展示2",
      "code": "# 返回图\nimport plotly.express as px\nif region: df = df.query(f\"region == '{region}'\")\nresult = px.bar(df.groupby(\"category\").sum().reset_index(), x=\"category\", y=\"quantity\")"
    },
    {
      "title": "3",
      "description": "33",
      "code": "# 返回表格\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\n# 创建一个简单的柱状图\nbar = (\n    Bar()\n    .add_xaxis([\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"])\n    .add_yaxis(\"商家A\", [5, 20, 36, 10, 75, 90])\n    .add_yaxis(\"商家B\", [15, 25, 16, 55, 48, 8])\n    .set_global_opts(\n        title_opts=opts.TitleOpts(title=\"销售数据\"),\n        xaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(rotate=-15)),\n        yaxis_opts=opts.AxisOpts(name=\"销量\"),\n        legend_opts=opts.LegendOpts(pos_top=\"5%\"),\n    )\n\n)\nresult = bar",
      "options": []
    },
    {
      "title": "4",
      "description": "4",
      "code": "from pyecharts import options as opts\nfrom pyecharts.charts import Graph\n\nnodes = [\n    opts.GraphNode(name=\"结点1\", symbol_size=10),\n    opts.GraphNode(name=\"结点2\", symbol_size=20),\n    opts.GraphNode(name=\"结点3\", symbol_size=30),\n    opts.GraphNode(name=\"结点4\", symbol_size=40),\n    opts.GraphNode(name=\"结点5\", symbol_size=50),\n]\nlinks = [\n    opts.GraphLink(source=\"结点1\", target=\"结点2\"),\n    opts.GraphLink(source=\"结点2\", target=\"结点3\"),\n    opts.GraphLink(source=\"结点3\", target=\"结点4\"),\n    opts.GraphLink(source=\"结点4\", target=\"结点5\"),\n    opts.GraphLink(source=\"结点5\", target=\"结点1\"),\n]\nresult = (\n    Graph()\n    .add(\"\", nodes, links, repulsion=4000)\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"Graph-GraphNode-GraphLink\"))\n)",
      "options": []
    },
    {
      "title": "6",
      "description": "6",
      "code": "import pyecharts.options as opts\nfrom pyecharts.charts import Bar3D\n\n\"\"\"\nGallery 使用 pyecharts 1.1.0\n参考地址: https://echarts.apache.org/examples/editor.html?c=bar3d-punch-card&gl=1\n\n目前无法实现的功能:\n\n1、光照和阴影暂时无法设置\n\"\"\"\n\nhours = [\n    \"12a\",\n    \"1a\",\n    \"2a\",\n    \"3a\",\n    \"4a\",\n    \"5a\",\n    \"6a\",\n    \"7a\",\n    \"8a\",\n    \"9a\",\n    \"10a\",\n    \"11a\",\n    \"12p\",\n    \"1p\",\n    \"2p\",\n    \"3p\",\n    \"4p\",\n    \"5p\",\n    \"6p\",\n    \"7p\",\n    \"8p\",\n    \"9p\",\n    \"10p\",\n    \"11p\",\n]\ndays = [\"Saturday\", \"Friday\", \"Thursday\", \"Wednesday\", \"Tuesday\", \"Monday\", \"Sunday\"]\n\ndata = [\n    [0, 0, 5],\n    [0, 1, 1],\n    [0, 2, 0],\n    [0, 3, 0],\n    [0, 4, 0],\n    [0, 5, 0],\n    [0, 6, 0],\n    [0, 7, 0],\n    [0, 8, 0],\n    [0, 9, 0],\n    [0, 10, 0],\n    [0, 11, 2],\n    [0, 12, 4],\n    [0, 13, 1],\n    [0, 14, 1],\n    [0, 15, 3],\n    [0, 16, 4],\n    [0, 17, 6],\n    [0, 18, 4],\n    [0, 19, 4],\n    [0, 20, 3],\n    [0, 21, 3],\n    [0, 22, 2],\n    [0, 23, 5],\n    [1, 0, 7],\n    [1, 1, 0],\n    [1, 2, 0],\n    [1, 3, 0],\n    [1, 4, 0],\n    [1, 5, 0],\n    [1, 6, 0],\n    [1, 7, 0],\n    [1, 8, 0],\n    [1, 9, 0],\n    [1, 10, 5],\n    [1, 11, 2],\n    [1, 12, 2],\n    [1, 13, 6],\n    [1, 14, 9],\n    [1, 15, 11],\n    [1, 16, 6],\n    [1, 17, 7],\n    [1, 18, 8],\n    [1, 19, 12],\n    [1, 20, 5],\n    [1, 21, 5],\n    [1, 22, 7],\n    [1, 23, 2],\n    [2, 0, 1],\n    [2, 1, 1],\n    [2, 2, 0],\n    [2, 3, 0],\n    [2, 4, 0],\n    [2, 5, 0],\n    [2, 6, 0],\n    [2, 7, 0],\n    [2, 8, 0],\n    [2, 9, 0],\n    [2, 10, 3],\n    [2, 11, 2],\n    [2, 12, 1],\n    [2, 13, 9],\n    [2, 14, 8],\n    [2, 15, 10],\n    [2, 16, 6],\n    [2, 17, 5],\n    [2, 18, 5],\n    [2, 19, 5],\n    [2, 20, 7],\n    [2, 21, 4],\n    [2, 22, 2],\n    [2, 23, 4],\n    [3, 0, 7],\n    [3, 1, 3],\n    [3, 2, 0],\n    [3, 3, 0],\n    [3, 4, 0],\n    [3, 5, 0],\n    [3, 6, 0],\n    [3, 7, 0],\n    [3, 8, 1],\n    [3, 9, 0],\n    [3, 10, 5],\n    [3, 11, 4],\n    [3, 12, 7],\n    [3, 13, 14],\n    [3, 14, 13],\n    [3, 15, 12],\n    [3, 16, 9],\n    [3, 17, 5],\n    [3, 18, 5],\n    [3, 19, 10],\n    [3, 20, 6],\n    [3, 21, 4],\n    [3, 22, 4],\n    [3, 23, 1],\n    [4, 0, 1],\n    [4, 1, 3],\n    [4, 2, 0],\n    [4, 3, 0],\n    [4, 4, 0],\n    [4, 5, 1],\n    [4, 6, 0],\n    [4, 7, 0],\n    [4, 8, 0],\n    [4, 9, 2],\n    [4, 10, 4],\n    [4, 11, 4],\n    [4, 12, 2],\n    [4, 13, 4],\n    [4, 14, 4],\n    [4, 15, 14],\n    [4, 16, 12],\n    [4, 17, 1],\n    [4, 18, 8],\n    [4, 19, 5],\n    [4, 20, 3],\n    [4, 21, 7],\n    [4, 22, 3],\n    [4, 23, 0],\n    [5, 0, 2],\n    [5, 1, 1],\n    [5, 2, 0],\n    [5, 3, 3],\n    [5, 4, 0],\n    [5, 5, 0],\n    [5, 6, 0],\n    [5, 7, 0],\n    [5, 8, 2],\n    [5, 9, 0],\n    [5, 10, 4],\n    [5, 11, 1],\n    [5, 12, 5],\n    [5, 13, 10],\n    [5, 14, 5],\n    [5, 15, 7],\n    [5, 16, 11],\n    [5, 17, 6],\n    [5, 18, 0],\n    [5, 19, 5],\n    [5, 20, 3],\n    [5, 21, 4],\n    [5, 22, 2],\n    [5, 23, 0],\n    [6, 0, 1],\n    [6, 1, 0],\n    [6, 2, 0],\n    [6, 3, 0],\n    [6, 4, 0],\n    [6, 5, 0],\n    [6, 6, 0],\n    [6, 7, 0],\n    [6, 8, 0],\n    [6, 9, 0],\n    [6, 10, 1],\n    [6, 11, 0],\n    [6, 12, 2],\n    [6, 13, 1],\n    [6, 14, 3],\n    [6, 15, 4],\n    [6, 16, 0],\n    [6, 17, 0],\n    [6, 18, 0],\n    [6, 19, 0],\n    [6, 20, 1],\n    [6, 21, 2],\n    [6, 22, 2],\n    [6, 23, 6],\n]\ndata = [[d[1], d[0], d[2]] for d in data]\n\n\nresult = (\n    Bar3D()\n    .add(\n        series_name=\"\",\n        data=data,\n        xaxis3d_opts=opts.Axis3DOpts(type_=\"category\", data=hours),\n        yaxis3d_opts=opts.Axis3DOpts(type_=\"category\", data=days),\n        zaxis3d_opts=opts.Axis3DOpts(type_=\"value\"),\n    )\n    .set_global_opts(\n        visualmap_opts=opts.VisualMapOpts(\n            max_=20,\n            range_color=[\n                \"#313695\",\n                \"#4575b4\",\n                \"#74add1\",\n                \"#abd9e9\",\n                \"#e0f3f8\",\n                \"#ffffbf\",\n                \"#fee090\",\n                \"#fdae61\",\n                \"#f46d43\",\n                \"#d73027\",\n                \"#a50026\",\n            ],\n        )\n    )\n)\n",
      "options": []
    }
  ]
}